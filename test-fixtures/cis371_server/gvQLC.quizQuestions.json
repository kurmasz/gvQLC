[
  {
    "filePath": "antonio/my_http_server.py",
    "range": {
      "start": {
        "line": 67,
        "character": 0
      },
      "end": {
        "line": 68,
        "character": 47
      }
    },
    "text": "Explain the difference between `=` and `:=`",
    "highlightedCode": "                while line := file.readline():\n                    socket.send_text_line(line)",
    "excludeFromQuiz": false
  },
  {
    "filePath": "awesome/my_http_server.py",
    "range": {
      "start": {
        "line": 58,
        "character": 0
      },
      "end": {
        "line": 58,
        "character": 65
      }
    },
    "text": "Why is `file` listed twice?",
    "highlightedCode": "        list_directory += f'<li><a href=\"{file}\">{file}</a></li>'",
    "excludeFromQuiz": false
  },
  {
    "filePath": "awesome/my_http_server.py",
    "range": {
      "start": {
        "line": 139,
        "character": 0
      },
      "end": {
        "line": 139,
        "character": 75
      }
    },
    "text": "What is `SO_REUSEADDR`?",
    "highlightedCode": "        server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)",
    "excludeFromQuiz": false
  },
  {
    "filePath": "caleb2/my_http_server.py",
    "range": {
      "start": {
        "line": 69,
        "character": 0
      },
      "end": {
        "line": 78,
        "character": 18
      }
    },
    "text": "What is the blank line for?",
    "highlightedCode": "        if not path.endswith('/'):\n            # Define the redirect path by adding a '/' at the end of the path\n            redirect_path = path + '/'\n            socket.send_text_line(\"HTTP/1.0 301 Moved Permanently\") # 301 is the correct call for a redirect\n            socket.send_text_line(f\"Location: {redirect_path}\") # Redirect path\n            socket.send_text_line(f\"Content-Length: 0\")\n            socket.send_text_line(f\"Connection: close\")\n            socket.send_text_line(\"\")\n            socket.close()\n            return",
    "excludeFromQuiz": false
  },
  {
    "filePath": "george/my_http_server.py",
    "range": {
      "start": {
        "line": 132,
        "character": 0
      },
      "end": {
        "line": 137,
        "character": 38
      }
    },
    "text": "What is the +2 for?",
    "highlightedCode": "        socket.send_text_line(\"HTTP/1.0 404 NOT FOUND\")\n        socket.send_text_line(\"Content-Type: text/html\")\n        socket.send_text_line(f\"Content-Length: {len(message) + 2}\") # +2 for CR/LF\n        socket.send_text_line(f\"Connection: close\")\n        socket.send_text_line(\"\")\n        socket.send_text_line(message)",
    "excludeFromQuiz": false
  },
  {
    "filePath": "cooper/my_http_server.py",
    "range": {
      "start": {
        "line": 110,
        "character": 0
      },
      "end": {
        "line": 115,
        "character": 66
      }
    },
    "text": "What is the blank line for?",
    "highlightedCode": "                socket.send_text_line(\"HTTP/1.0 200 OK\")\n                socket.send_text_line(\"Content-Type: \" + EXTENSION_MAP.get(extension))\n                socket.send_text_line(f\"Content-Length: {file_size}\")\n                socket.send_text_line(f\"Connection: close\")\n                socket.send_text_line(\"\")\n                socket.send_binary_data_from_file(file, file_size)",
    "excludeFromQuiz": false
  },
  {
    "filePath": "uncle_bob/my_http_server.py",
    "range": {
      "start": {
        "line": 62,
        "character": 0
      },
      "end": {
        "line": 62,
        "character": 69
      }
    },
    "text": "What does the `[1:]` mean? Why not `[2:]`?",
    "highlightedCode": "        path = parts[1][1:]  # remove the first character of the path",
    "excludeFromQuiz": false
  },
  {
    "filePath": "jim/my_http_server.py",
    "range": {
      "start": {
        "line": 174,
        "character": 0
      },
      "end": {
        "line": 175,
        "character": 10
      }
    },
    "text": "Explain what this code does.  What is `__name__` and `\"__main__\"`",
    "highlightedCode": "if __name__ == \"__main__\":\n    main()",
    "excludeFromQuiz": false
  },
  {
    "filePath": "jim/my_http_server.py",
    "range": {
      "start": {
        "line": 145,
        "character": 0
      },
      "end": {
        "line": 145,
        "character": 18
      }
    },
    "text": "What happens if you don't close the socket?",
    "highlightedCode": "    socket.close()",
    "excludeFromQuiz": false
  },
  {
    "filePath": "neptune_man/my_http_server.py",
    "range": {
      "start": {
        "line": 119,
        "character": 0
      },
      "end": {
        "line": 135,
        "character": 47
      }
    },
    "text": "How would read mode ever be anything but `rb`?",
    "highlightedCode": "        if path.endswith((\".jpeg\", \".jpg\", \".png\", \".gif\", \".ico\", \".pdf\")):\n            read_mode = \"rb\"\n\n        file_size = os.path.getsize(path)\n        with open(path, read_mode) as file:\n            socket.send_text_line(\"HTTP/1.0 200 OK\")\n            socket.send_text_line(f\"Content-Type: {content_type}\")\n            socket.send_text_line(f\"Content-Length: {file_size}\")\n            socket.send_text_line(f\"Connection: close\")\n            socket.send_text_line(\"\")\n\n            if read_mode == 'rb':\n                socket.send_binary_data_from_file(file, file_size)\n\n            else:\n                while line := file.readline():\n                    socket.send_text_line(line)",
    "excludeFromQuiz": false
  },
  {
    "filePath": "uncle_bob/my_http_server.py",
    "range": {
      "start": {
        "line": 63,
        "character": 7
      },
      "end": {
        "line": 63,
        "character": 79
      }
    },
    "text": "What is the significance of `path[-1] == '/'? What exactly is being checked, and what does that mean at a high level? ",
    "highlightedCode": " if os.path.isdir(path) or os.path.isdir(f'{path}/') or path[-1] == '/':",
    "excludeFromQuiz": false
  },
  {
    "filePath": "antonio/my_http_server.py",
    "range": {
      "start": {
        "line": 77,
        "character": 0
      },
      "end": {
        "line": 78,
        "character": 19
      }
    },
    "text": "Why do we need to add '/'?",
    "highlightedCode": "    if path[-1] != '/':\n        path += '/'",
    "excludeFromQuiz": false
  },
  {
    "filePath": "jim/my_http_server.py",
    "range": {
      "start": {
        "line": 166,
        "character": 0
      },
      "end": {
        "line": 167,
        "character": 30
      }
    },
    "text": "What is the difference between `bind` and `listen`?",
    "highlightedCode": "        server_socket.bind((HOST, port))\n        server_socket.listen()",
    "excludeFromQuiz": false
  },
  {
    "filePath": "cooper/my_http_server.py",
    "range": {
      "start": {
        "line": 64,
        "character": 0
      },
      "end": {
        "line": 64,
        "character": 42
      }
    },
    "text": "Explain how this works.",
    "highlightedCode": "        extension = path[path.index(\".\"):]",
    "excludeFromQuiz": false
  }
]