[  {
    "filePath": "antonio/my_http_server.py",
    "range": {
      "start": {
        "line": 67,
        "character": 0
      },
      "end": {
        "line": 68,
        "character": 47
      }
    },
    "text": "Explain the difference between `=` and `:=`",
    "highlightedCode": "                while line := file.readline():\n                    socket.send_text_line(line)",
    "excludeFromQuiz": false
  },
  {
    "filePath": "antonio/my_http_server.py",
    "range": {
      "start": {
        "line": 67,
        "character": 0
      },
      "end": {
        "line": 68,
        "character": 47
      }
    },
    "text": "Explain the difference between `=` and `:=`",
    "highlightedCode": "                while line := file.readline():\n                    socket.send_text_line(line)",
    "excludeFromQuiz": false
  },
  {
    "filePath": "awesome/my_http_server.py",
    "range": {
      "start": {
        "line": 58,
        "character": 0
      },
      "end": {
        "line": 58,
        "character": 65
      }
    },
    "text": "Why is `file` listed twice?",
    "highlightedCode": "        list_directory += f'<li><a href=\"{file}\">{file}</a></li>'",
    "excludeFromQuiz": false
  },
  {
    "filePath": "awesome/my_http_server.py",
    "range": {
      "start": {
        "line": 139,
        "character": 0
      },
      "end": {
        "line": 139,
        "character": 75
      }
    },
    "text": "What is `SO_REUSEADDR`?",
    "highlightedCode": "        server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)",
    "excludeFromQuiz": false
  },
  {
    "filePath": "caleb/my_http_server.py",
    "range": {
      "start": {
        "line": 69,
        "character": 0
      },
      "end": {
        "line": 78,
        "character": 18
      }
    },
    "text": "What is the blank line for?",
    "highlightedCode": "        if not path.endswith('/'):\n            # Define the redirect path by adding a '/' at the end of the path\n            redirect_path = path + '/'\n            socket.send_text_line(\"HTTP/1.0 301 Moved Permanently\") # 301 is the correct call for a redirect\n            socket.send_text_line(f\"Location: {redirect_path}\") # Redirect path\n            socket.send_text_line(f\"Content-Length: 0\")\n            socket.send_text_line(f\"Connection: close\")\n            socket.send_text_line(\"\")\n            socket.close()\n            return",
    "excludeFromQuiz": false
  },
  {
    "filePath": "george/my_http_server.py",
    "range": {
      "start": {
        "line": 132,
        "character": 0
      },
      "end": {
        "line": 137,
        "character": 38
      }
    },
    "text": "What is the +2 for?",
    "highlightedCode": "        socket.send_text_line(\"HTTP/1.0 404 NOT FOUND\")\n        socket.send_text_line(\"Content-Type: text/html\")\n        socket.send_text_line(f\"Content-Length: {len(message) + 2}\") # +2 for CR/LF\n        socket.send_text_line(f\"Connection: close\")\n        socket.send_text_line(\"\")\n        socket.send_text_line(message)",
    "excludeFromQuiz": false
  },
  {
    "filePath": "cooper/my_http_server.py",
    "range": {
      "start": {
        "line": 110,
        "character": 0
      },
      "end": {
        "line": 115,
        "character": 66
      }
    },
    "text": "What is the blank line for?",
    "highlightedCode": "                socket.send_text_line(\"HTTP/1.0 200 OK\")\n                socket.send_text_line(\"Content-Type: \" + EXTENSION_MAP.get(extension))\n                socket.send_text_line(f\"Content-Length: {file_size}\")\n                socket.send_text_line(f\"Connection: close\")\n                socket.send_text_line(\"\")\n                socket.send_binary_data_from_file(file, file_size)",
    "excludeFromQuiz": false
  },
    {
    "filePath": "uncle_bob/my_http_server.py",
    "range": {
      "start": {
        "line": 62,
        "character": 0
      },
      "end": {
        "line": 62,
        "character": 69
      }
    },
    "text": "What does the `[1:]` mean?",
    "highlightedCode": "        path = parts[1][1:]  # remove the first character of the path",
    "excludeFromQuiz": false
  }
]